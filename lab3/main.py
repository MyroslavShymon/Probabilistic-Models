import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats

# Задані дані
data_A = [
    [45, 51, 58, 76, 48],
    [59, 42, 62, 39, 51],
    [60, 66, 71, 73, 61],
    [46, 48, 50, 37, 34],
    [55, 53, 42, 26, 69],
    [41, 51, 36, 53, 68],
    [56, 46, 50, 38, 47],
    [49, 48, 52, 61, 48],
    [39, 58, 39, 36, 57],
    [58, 50, 42, 41, 66],
    [62, 64, 46, 41, 68],
    [65, 45, 46, 46, 49],
    [54, 52, 40, 42, 63],
    [41, 44, 55, 43, 46],
    [68, 59, 60, 60, 33]
]

data_B = [
    [49, 44, 51, 70, 54],
    [50, 35, 48, 23, 52],
    [45, 29, 37, 66, 44],
    [52, 66, 31, 59, 44],
    [47, 45, 53, 56, 59],
    [61, 64, 47, 54, 63],
    [53, 62, 56, 52, 51],
    [64, 36, 43, 52, 49],
    [47, 40, 35, 61, 38],
    [40, 55, 49, 62, 64],
    [49, 44, 51, 70, 54],
    [50, 35, 48, 23, 52],
    [45, 29, 37, 66, 44],
    [52, 66, 31, 59, 44],
    [47, 45, 53, 56, 59]
]

data_C = [
    [36, 64, 50, 67, 37],
    [48, 51, 54, 55, 28],
    [54, 47, 45, 57, 51],
    [46, 57, 50, 45, 54],
    [58, 35, 45, 65, 53],
    [55, 60, 42, 43, 65],
    [30, 47, 47, 41, 52],
    [49, 44, 57, 61, 54],
    [50, 47, 57, 52, 40],
    [69, 47, 50, 58, 58],
    [44, 42, 60, 44, 58],
    [44, 48, 52, 48, 56],
    [56, 63, 58, 52, 60],
    [36, 37, 42, 39, 38],
    [57, 55, 66, 61, 40]
]

data_D = [
    [42, 55, 51, 53, 58],
    [41, 30, 48, 54, 46],
    [50, 49, 62, 34, 35],
    [62, 41, 40, 38, 34],
    [63, 24, 41, 41, 46],
    [48, 57, 50, 53, 54],
    [31, 48, 55, 53, 60],
    [58, 63, 47, 42, 65],
    [53, 51, 43, 46, 57],
    [44, 53, 45, 54, 46],
    [35, 54, 42, 34, 49],
    [35, 36, 49, 37, 38],
    [42, 48, 34, 54, 51],
    [70, 39, 44, 41, 41],
    [50, 62, 43, 47, 49]
]

data_E = [
    [36, 64, 50, 67, 37],
    [48, 51, 54, 55, 28],
    [54, 47, 45, 57, 51],
    [46, 57, 50, 45, 54],
    [58, 35, 45, 65, 53],
    [55, 60, 42, 43, 65],
    [30, 47, 47, 41, 52],
    [49, 44, 57, 61, 54],
    [50, 47, 57, 52, 40],
    [69, 47, 50, 58, 58],
    [59, 72, 47, 39, 39],
    [54, 57, 39, 57, 49],
    [57, 59, 39, 45, 33],
    [70, 64, 49, 48, 62],
    [52, 55, 55, 60, 46]
]

data_choice = input("Виберіть набір даних для аналізу (А, Б, В, Г, Д): ")
if data_choice == 'А':
    chosen_data = data_A
elif data_choice == 'Б':
    chosen_data = data_B
elif data_choice == 'В':
    chosen_data = data_C
elif data_choice == 'Г':
    chosen_data = data_D
elif data_choice == 'Д':
    chosen_data = data_E
else:
    print("Невірний вибір.")
    chosen_data = None

if chosen_data:

    # Перетворення вибірки в одномірний масив
    flat_data = np.array(chosen_data).flatten()

    # Обчислення вибіркового середнього
    sample_mean = np.mean(flat_data)
    print("Вибіркове середнє (a):", sample_mean)

    # Обчислення виправленого середнього квадратичного відхилення
    sample_std = np.std(flat_data, ddof=1)
    print("Виправлене середнє квадратичне відхилення (σ):", sample_std)

    # Побудова теоретичної кривої нормального розподілу
    fit_params = stats.norm.fit(flat_data)
    x = np.linspace(min(flat_data), max(flat_data), 100)
    pdf = stats.norm.pdf(x, *fit_params)
    print("Параметри нормального розподілу (a, σ):", fit_params)

    # Побудова гістограми вибірки та теоретичної кривої розподілу
    plt.hist(flat_data, bins='auto', density=True, alpha=0.5, color='b', label='Вибірка', edgecolor='black')
    plt.plot(x, pdf, 'r', label='Теоретична крива розподілу')
    plt.xlabel('Значення')
    plt.ylabel('Щільність ймовірності')
    plt.title('Порівняння теоретичної кривої розподілу та вибірки')
    plt.legend()
    plt.grid(True)
    plt.show()

    # Перевірка відповідності теоретичного розподілу даним експерименту
    alpha = 0.05
    statistic, p_value = stats.kstest(flat_data, 'norm', args=fit_params)
    critical_value = stats.kstwo.ppf(1 - alpha, len(flat_data))

    print("Емпіричне значення тестової статистики:", statistic)
    print("Теоретичне значення для рівня значущості α:", critical_value)
    print("р-значення:", p_value)

    if p_value < alpha:
        print("Теоретична крива розподілу НЕ відповідає даним експерименту (рівень значущості", alpha, ")")
    else:
        print("Теоретична крива розподілу відповідає даним експерименту (рівень значущості", alpha, ")")

